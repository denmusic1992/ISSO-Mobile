//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by SlSvcUtil, version 5.0.61118.0
// 
using System;
using System.ServiceModel;
using Ais7MobileCommonServerCore;

namespace Ais7MobileCommonServerCore
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HttpsIsso", Namespace="http://schemas.datacontract.org/2004/07/Ais7MobileCommonServerCore")]
    public partial class HttpsIsso : object
    {
        
        private int CIssoField;
        
        private int CTypeIssoField;
        
        private string DorNameField;
        
        private string ExpertRatingField;
        
        private int ExpertRatingNumericField;
        
        private string FullNameField;
        
        private double LatitudeField;
        
        private double LengthField;
        
        private double LongitudeField;
        
        private string NameField;
        
        private string NameIssoField;
        
        private string ObstacleField;
        
        private int WIssoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CIsso
        {
            get
            {
                return this.CIssoField;
            }
            set
            {
                this.CIssoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CTypeIsso
        {
            get
            {
                return this.CTypeIssoField;
            }
            set
            {
                this.CTypeIssoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DorName
        {
            get
            {
                return this.DorNameField;
            }
            set
            {
                this.DorNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpertRating
        {
            get
            {
                return this.ExpertRatingField;
            }
            set
            {
                this.ExpertRatingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpertRatingNumeric
        {
            get
            {
                return this.ExpertRatingNumericField;
            }
            set
            {
                this.ExpertRatingNumericField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName
        {
            get
            {
                return this.FullNameField;
            }
            set
            {
                this.FullNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude
        {
            get
            {
                return this.LatitudeField;
            }
            set
            {
                this.LatitudeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Length
        {
            get
            {
                return this.LengthField;
            }
            set
            {
                this.LengthField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude
        {
            get
            {
                return this.LongitudeField;
            }
            set
            {
                this.LongitudeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameIsso
        {
            get
            {
                return this.NameIssoField;
            }
            set
            {
                this.NameIssoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Obstacle
        {
            get
            {
                return this.ObstacleField;
            }
            set
            {
                this.ObstacleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WIsso
        {
            get
            {
                return this.WIssoField;
            }
            set
            {
                this.WIssoField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IAis7MobileCommonServerCoreXamarin")]
public interface IAis7MobileCommonServerCoreXamarin
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAis7MobileCommonServerCoreXamarin/HttpsGetSessionId", ReplyAction="http://tempuri.org/IAis7MobileCommonServerCoreXamarin/HttpsGetSessionIdResponse")]
    System.IAsyncResult BeginHttpsGetSessionId(string user, string pass, System.AsyncCallback callback, object asyncState);
    
    string[] EndHttpsGetSessionId(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAis7MobileCommonServerCoreXamarin/HttpsGetIssoList", ReplyAction="http://tempuri.org/IAis7MobileCommonServerCoreXamarin/HttpsGetIssoListResponse")]
    System.IAsyncResult BeginHttpsGetIssoList(System.Guid id, System.AsyncCallback callback, object asyncState);
    
    Ais7MobileCommonServerCore.HttpsIsso[] EndHttpsGetIssoList(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAis7MobileCommonServerCoreXamarin/HttpsCloseSession", ReplyAction="http://tempuri.org/IAis7MobileCommonServerCoreXamarin/HttpsCloseSessionResponse")]
    System.IAsyncResult BeginHttpsCloseSession(System.Guid id, System.AsyncCallback callback, object asyncState);
    
    void EndHttpsCloseSession(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAis7MobileCommonServerCoreXamarin/HttpsGetMessage", ReplyAction="http://tempuri.org/IAis7MobileCommonServerCoreXamarin/HttpsGetMessageResponse")]
    System.IAsyncResult BeginHttpsGetMessage(System.Guid id, System.AsyncCallback callback, object asyncState);
    
    string EndHttpsGetMessage(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IAis7MobileCommonServerCoreXamarinChannel : IAis7MobileCommonServerCoreXamarin, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class HttpsGetSessionIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public HttpsGetSessionIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class HttpsGetIssoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public HttpsGetIssoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public Ais7MobileCommonServerCore.HttpsIsso[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Ais7MobileCommonServerCore.HttpsIsso[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class HttpsGetMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public HttpsGetMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class Ais7MobileCommonServerCoreXamarinClient : System.ServiceModel.ClientBase<IAis7MobileCommonServerCoreXamarin>, IAis7MobileCommonServerCoreXamarin
{
    
    private BeginOperationDelegate onBeginHttpsGetSessionIdDelegate;
    
    private EndOperationDelegate onEndHttpsGetSessionIdDelegate;
    
    private System.Threading.SendOrPostCallback onHttpsGetSessionIdCompletedDelegate;
    
    private BeginOperationDelegate onBeginHttpsGetIssoListDelegate;
    
    private EndOperationDelegate onEndHttpsGetIssoListDelegate;
    
    private System.Threading.SendOrPostCallback onHttpsGetIssoListCompletedDelegate;
    
    private BeginOperationDelegate onBeginHttpsCloseSessionDelegate;
    
    private EndOperationDelegate onEndHttpsCloseSessionDelegate;
    
    private System.Threading.SendOrPostCallback onHttpsCloseSessionCompletedDelegate;
    
    private BeginOperationDelegate onBeginHttpsGetMessageDelegate;
    
    private EndOperationDelegate onEndHttpsGetMessageDelegate;
    
    private System.Threading.SendOrPostCallback onHttpsGetMessageCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public Ais7MobileCommonServerCoreXamarinClient()
    {
    }
    
    public Ais7MobileCommonServerCoreXamarinClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public Ais7MobileCommonServerCoreXamarinClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public Ais7MobileCommonServerCoreXamarinClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public Ais7MobileCommonServerCoreXamarinClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<HttpsGetSessionIdCompletedEventArgs> HttpsGetSessionIdCompleted;
    
    public event System.EventHandler<HttpsGetIssoListCompletedEventArgs> HttpsGetIssoListCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> HttpsCloseSessionCompleted;
    
    public event System.EventHandler<HttpsGetMessageCompletedEventArgs> HttpsGetMessageCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IAis7MobileCommonServerCoreXamarin.BeginHttpsGetSessionId(string user, string pass, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginHttpsGetSessionId(user, pass, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string[] IAis7MobileCommonServerCoreXamarin.EndHttpsGetSessionId(System.IAsyncResult result)
    {
        return base.Channel.EndHttpsGetSessionId(result);
    }
    
    private System.IAsyncResult OnBeginHttpsGetSessionId(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string user = ((string)(inValues[0]));
        string pass = ((string)(inValues[1]));
        return ((IAis7MobileCommonServerCoreXamarin)(this)).BeginHttpsGetSessionId(user, pass, callback, asyncState);
    }
    
    private object[] OnEndHttpsGetSessionId(System.IAsyncResult result)
    {
        string[] retVal = ((IAis7MobileCommonServerCoreXamarin)(this)).EndHttpsGetSessionId(result);
        return new object[] {
                retVal};
    }
    
    private void OnHttpsGetSessionIdCompleted(object state)
    {
        if ((this.HttpsGetSessionIdCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.HttpsGetSessionIdCompleted(this, new HttpsGetSessionIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void HttpsGetSessionIdAsync(string user, string pass)
    {
        this.HttpsGetSessionIdAsync(user, pass, null);
    }
    
    public void HttpsGetSessionIdAsync(string user, string pass, object userState)
    {
        if ((this.onBeginHttpsGetSessionIdDelegate == null))
        {
            this.onBeginHttpsGetSessionIdDelegate = new BeginOperationDelegate(this.OnBeginHttpsGetSessionId);
        }
        if ((this.onEndHttpsGetSessionIdDelegate == null))
        {
            this.onEndHttpsGetSessionIdDelegate = new EndOperationDelegate(this.OnEndHttpsGetSessionId);
        }
        if ((this.onHttpsGetSessionIdCompletedDelegate == null))
        {
            this.onHttpsGetSessionIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHttpsGetSessionIdCompleted);
        }
        base.InvokeAsync(this.onBeginHttpsGetSessionIdDelegate, new object[] {
                    user,
                    pass}, this.onEndHttpsGetSessionIdDelegate, this.onHttpsGetSessionIdCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IAis7MobileCommonServerCoreXamarin.BeginHttpsGetIssoList(System.Guid id, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginHttpsGetIssoList(id, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Ais7MobileCommonServerCore.HttpsIsso[] IAis7MobileCommonServerCoreXamarin.EndHttpsGetIssoList(System.IAsyncResult result)
    {
        return base.Channel.EndHttpsGetIssoList(result);
    }
    
    private System.IAsyncResult OnBeginHttpsGetIssoList(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Guid id = ((System.Guid)(inValues[0]));
        return ((IAis7MobileCommonServerCoreXamarin)(this)).BeginHttpsGetIssoList(id, callback, asyncState);
    }
    
    private object[] OnEndHttpsGetIssoList(System.IAsyncResult result)
    {
        Ais7MobileCommonServerCore.HttpsIsso[] retVal = ((IAis7MobileCommonServerCoreXamarin)(this)).EndHttpsGetIssoList(result);
        return new object[] {
                retVal};
    }
    
    private void OnHttpsGetIssoListCompleted(object state)
    {
        if ((this.HttpsGetIssoListCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.HttpsGetIssoListCompleted(this, new HttpsGetIssoListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void HttpsGetIssoListAsync(System.Guid id)
    {
        this.HttpsGetIssoListAsync(id, null);
    }
    
    public void HttpsGetIssoListAsync(System.Guid id, object userState)
    {
        if ((this.onBeginHttpsGetIssoListDelegate == null))
        {
            this.onBeginHttpsGetIssoListDelegate = new BeginOperationDelegate(this.OnBeginHttpsGetIssoList);
        }
        if ((this.onEndHttpsGetIssoListDelegate == null))
        {
            this.onEndHttpsGetIssoListDelegate = new EndOperationDelegate(this.OnEndHttpsGetIssoList);
        }
        if ((this.onHttpsGetIssoListCompletedDelegate == null))
        {
            this.onHttpsGetIssoListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHttpsGetIssoListCompleted);
        }
        base.InvokeAsync(this.onBeginHttpsGetIssoListDelegate, new object[] {
                    id}, this.onEndHttpsGetIssoListDelegate, this.onHttpsGetIssoListCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IAis7MobileCommonServerCoreXamarin.BeginHttpsCloseSession(System.Guid id, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginHttpsCloseSession(id, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    void IAis7MobileCommonServerCoreXamarin.EndHttpsCloseSession(System.IAsyncResult result)
    {
        base.Channel.EndHttpsCloseSession(result);
    }
    
    private System.IAsyncResult OnBeginHttpsCloseSession(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Guid id = ((System.Guid)(inValues[0]));
        return ((IAis7MobileCommonServerCoreXamarin)(this)).BeginHttpsCloseSession(id, callback, asyncState);
    }
    
    private object[] OnEndHttpsCloseSession(System.IAsyncResult result)
    {
        ((IAis7MobileCommonServerCoreXamarin)(this)).EndHttpsCloseSession(result);
        return null;
    }
    
    private void OnHttpsCloseSessionCompleted(object state)
    {
        if ((this.HttpsCloseSessionCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.HttpsCloseSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void HttpsCloseSessionAsync(System.Guid id)
    {
        this.HttpsCloseSessionAsync(id, null);
    }
    
    public void HttpsCloseSessionAsync(System.Guid id, object userState)
    {
        if ((this.onBeginHttpsCloseSessionDelegate == null))
        {
            this.onBeginHttpsCloseSessionDelegate = new BeginOperationDelegate(this.OnBeginHttpsCloseSession);
        }
        if ((this.onEndHttpsCloseSessionDelegate == null))
        {
            this.onEndHttpsCloseSessionDelegate = new EndOperationDelegate(this.OnEndHttpsCloseSession);
        }
        if ((this.onHttpsCloseSessionCompletedDelegate == null))
        {
            this.onHttpsCloseSessionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHttpsCloseSessionCompleted);
        }
        base.InvokeAsync(this.onBeginHttpsCloseSessionDelegate, new object[] {
                    id}, this.onEndHttpsCloseSessionDelegate, this.onHttpsCloseSessionCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IAis7MobileCommonServerCoreXamarin.BeginHttpsGetMessage(System.Guid id, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginHttpsGetMessage(id, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IAis7MobileCommonServerCoreXamarin.EndHttpsGetMessage(System.IAsyncResult result)
    {
        return base.Channel.EndHttpsGetMessage(result);
    }
    
    private System.IAsyncResult OnBeginHttpsGetMessage(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Guid id = ((System.Guid)(inValues[0]));
        return ((IAis7MobileCommonServerCoreXamarin)(this)).BeginHttpsGetMessage(id, callback, asyncState);
    }
    
    private object[] OnEndHttpsGetMessage(System.IAsyncResult result)
    {
        string retVal = ((IAis7MobileCommonServerCoreXamarin)(this)).EndHttpsGetMessage(result);
        return new object[] {
                retVal};
    }
    
    private void OnHttpsGetMessageCompleted(object state)
    {
        if ((this.HttpsGetMessageCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.HttpsGetMessageCompleted(this, new HttpsGetMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void HttpsGetMessageAsync(System.Guid id)
    {
        this.HttpsGetMessageAsync(id, null);
    }
    
    public void HttpsGetMessageAsync(System.Guid id, object userState)
    {
        if ((this.onBeginHttpsGetMessageDelegate == null))
        {
            this.onBeginHttpsGetMessageDelegate = new BeginOperationDelegate(this.OnBeginHttpsGetMessage);
        }
        if ((this.onEndHttpsGetMessageDelegate == null))
        {
            this.onEndHttpsGetMessageDelegate = new EndOperationDelegate(this.OnEndHttpsGetMessage);
        }
        if ((this.onHttpsGetMessageCompletedDelegate == null))
        {
            this.onHttpsGetMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHttpsGetMessageCompleted);
        }
        base.InvokeAsync(this.onBeginHttpsGetMessageDelegate, new object[] {
                    id}, this.onEndHttpsGetMessageDelegate, this.onHttpsGetMessageCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override IAis7MobileCommonServerCoreXamarin CreateChannel()
    {
        return new Ais7MobileCommonServerCoreXamarinClientChannel(this);
    }
    
    private class Ais7MobileCommonServerCoreXamarinClientChannel : ChannelBase<IAis7MobileCommonServerCoreXamarin>, IAis7MobileCommonServerCoreXamarin
    {
        
        public Ais7MobileCommonServerCoreXamarinClientChannel(System.ServiceModel.ClientBase<IAis7MobileCommonServerCoreXamarin> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginHttpsGetSessionId(string user, string pass, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[2];
            _args[0] = user;
            _args[1] = pass;
            System.IAsyncResult _result = base.BeginInvoke("HttpsGetSessionId", _args, callback, asyncState);
            return _result;
        }
        
        public string[] EndHttpsGetSessionId(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string[] _result = ((string[])(base.EndInvoke("HttpsGetSessionId", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginHttpsGetIssoList(System.Guid id, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = id;
            System.IAsyncResult _result = base.BeginInvoke("HttpsGetIssoList", _args, callback, asyncState);
            return _result;
        }
        
        public Ais7MobileCommonServerCore.HttpsIsso[] EndHttpsGetIssoList(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Ais7MobileCommonServerCore.HttpsIsso[] _result = ((Ais7MobileCommonServerCore.HttpsIsso[])(base.EndInvoke("HttpsGetIssoList", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginHttpsCloseSession(System.Guid id, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = id;
            System.IAsyncResult _result = base.BeginInvoke("HttpsCloseSession", _args, callback, asyncState);
            return _result;
        }
        
        public void EndHttpsCloseSession(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            base.EndInvoke("HttpsCloseSession", _args, result);
        }
        
        public System.IAsyncResult BeginHttpsGetMessage(System.Guid id, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = id;
            System.IAsyncResult _result = base.BeginInvoke("HttpsGetMessage", _args, callback, asyncState);
            return _result;
        }
        
        public string EndHttpsGetMessage(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("HttpsGetMessage", _args, result)));
            return _result;
        }
    }
}


public class MyCommonXamarinClient : ClientBase<IAis7MobileCommonServerCoreXamarin>, IAis7MobileCommonServerCoreXamarin
{

    // Timeout
    private int timeout = 30000;

    public MyCommonXamarinClient()
    {
    }

    public MyCommonXamarinClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
    {
    }

    IAsyncResult IAis7MobileCommonServerCoreXamarin.BeginHttpsCloseSession(Guid id, AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginHttpsCloseSession(id, callback, asyncState);
    }

    IAsyncResult IAis7MobileCommonServerCoreXamarin.BeginHttpsGetIssoList(Guid id, AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginHttpsGetIssoList(id, callback, asyncState);
    }

    IAsyncResult IAis7MobileCommonServerCoreXamarin.BeginHttpsGetMessage(Guid id, AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginHttpsGetMessage(id, callback, asyncState);
    }

    IAsyncResult IAis7MobileCommonServerCoreXamarin.BeginHttpsGetSessionId(string user, string pass, AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginHttpsGetSessionId(user, pass, callback, asyncState);
    }

    void IAis7MobileCommonServerCoreXamarin.EndHttpsCloseSession(IAsyncResult result)
    {
        base.Channel.EndHttpsCloseSession(result);
    }

    HttpsIsso[] IAis7MobileCommonServerCoreXamarin.EndHttpsGetIssoList(IAsyncResult result)
    {
        return base.Channel.EndHttpsGetIssoList(result);
    }

    string IAis7MobileCommonServerCoreXamarin.EndHttpsGetMessage(IAsyncResult result)
    {
        return base.Channel.EndHttpsGetMessage(result);
    }

    string[] IAis7MobileCommonServerCoreXamarin.EndHttpsGetSessionId(IAsyncResult result)
    {
        return base.Channel.EndHttpsGetSessionId(result);
    }

    public void HttpsCloseSession(Guid id)
    {
        var result = ((IAis7MobileCommonServerCoreXamarin)(this)).BeginHttpsCloseSession(id, null, new object());
        result.AsyncWaitHandle.WaitOne();
        if (result.AsyncWaitHandle.WaitOne(timeout))
        {
            ((IAis7MobileCommonServerCoreXamarin)(this)).EndHttpsCloseSession(result);
        }
    }

    public HttpsIsso[] HttpsGetIssoList(Guid id)
    {
        var result = ((IAis7MobileCommonServerCoreXamarin)(this)).BeginHttpsGetIssoList(id, null, new object());
        result.AsyncWaitHandle.WaitOne();
        if (result.AsyncWaitHandle.WaitOne(timeout))
        {
            return ((IAis7MobileCommonServerCoreXamarin)(this)).EndHttpsGetIssoList(result);
        }
        else
        {
            // Если вызов не вернулся перед timeout
            return null;
        }
    }

    public string HttpsGetMessage(Guid id)
    {
        var result = ((IAis7MobileCommonServerCoreXamarin)(this)).BeginHttpsGetMessage(id, null, new object());
        result.AsyncWaitHandle.WaitOne();
        if (result.AsyncWaitHandle.WaitOne(timeout))
        {
            return ((IAis7MobileCommonServerCoreXamarin)(this)).EndHttpsGetMessage(result);
        }
        else
        {
            // Если вызов не вернулся перед timeout
            return null;
        }
    }

    public string[] HttpsGetSessionId(string user, string pass)
    {
        var result = ((IAis7MobileCommonServerCoreXamarin)(this)).BeginHttpsGetSessionId(user, pass, null, new object());
        result.AsyncWaitHandle.WaitOne();
        if (result.AsyncWaitHandle.WaitOne(timeout))
        {
            return ((IAis7MobileCommonServerCoreXamarin)(this)).EndHttpsGetSessionId(result);
        }
        else
        {
            // Если вызов не вернулся перед timeout
            return null;
        }
    }
}